勉強会：
Dockerとは：
一貫した方法で、アプリケーションを作成、実行、配布するためのプラットフォームです。

つまり、あるアプリケーションがある開発マシンで動作する場合、
他のマシンでも同じように実行できます。

たまに同じアプリケーションでも、(A)PCと(B)PC上で実行したい場合は、
(A)PCに通常に動作できたのに、(B)PCに動作できない場合があります。
理由：
1- アプリケーションのファイルを一致してない。
2- ソフトウェアバージョンの不一致。
3- 各PCの設定の違い

ここで docker が助けに来ます。
docker を利用することによって、アプリケーションに必要なものすべてをパッケージ化して、
複数のマシンで、正常に実行できます。

つまり、開発マシンで正常に動作した場合は、テストおよび本番マシンで必ず正常に作業します。

さらに、チームに新しいメンバーが入ってきたら、半日ほどがかかる開発環境のセットアップ
を避けることができます。つまり、依存関係をインストールして構成する必要はありません。
ただ、新メンバーがアプリケーションを立ち上げる(docker-compose 
up)際に、docker自体が自動的指定されたアプリケーションの依存関係をダウンロードして、
コンテナと呼ばれる隔離環境で実行します。

dockerの特徴：
1- 複数のアプリケシーン（異なる依存関係でも）コンフリクトせずに実行できます。
ex: App1 node 9
ex: App2 node 14
同じマシンで問題なく実行可能です。

2-アプリケーシんを使い終わったら、対象アプリケーションと依頼関係を簡単に削除できます。
つまり、dockerなしで、様々なプロジェクトを取り込むことによって、自分の開発環境がダウンロード
された依頼関係やライブライによって、散らかってしまいます。
そしてしばらくすると、不要だと思ったツールの 1 つまたは複数を削除できるかどうか
わからなくなってしまいます。
なぜなら、アプリケーションを台無しにする可能性が高いからです。







