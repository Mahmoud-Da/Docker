Docker Architecture:
Docker uses a client server architecture.
so it has a client component that talks to a server component
using a RESTful API.
the server also called the Docker engine, sits in the background
and takes care of building and running Docker containers.


But technically,
container is just a process, like other
processes running on your computer.
But it`s special kind of process

container:
don`t have a full blown of OS, instade, all containers
on a host share the operating system of the host.

=> all the containers share the kernel of the host.
What`s is kernel:
kernel is the core of an OS(operating system).
(like the engine of the car)
it`s the part that manages all applications and hardware resources.
(like memory and CPU)

- everyone OS has its own karnel or engine (of kind of car has it`s own engine)
and this kernel have different API`s
=> we can run a Windows application on Linux.
because under the hood this application is to talk to the karnel of
the underlying OS

that`s means
on Linux OS we can only run Linux containers
cuz:
these containers need Linux

on windows machine we can run Linux and windows containers
cuz:
windows 10 is now shipped wiht a custom build Linux karnel.
this is addition to the windows karnel that`s always benefitin windows
its`s not a replacement.
SO, with this linux kernel we run Linux applications natively on windows


on MAC OS has it own karnel which is different from Linux and Windows karnel
and this kernel doesn`t have native support for containerized applications.
=> So Docker on Mac uses a lightweight linux virtual machine to run 
linux containers