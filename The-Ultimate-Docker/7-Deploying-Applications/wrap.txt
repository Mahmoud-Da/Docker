*** 1- Introduction ***

- this the last section of the Ultimate Docker course.
In this section, we're going to learn how to deploy our dockerized applications.

- So we're going to take the same application we have been working with and put it in the cloud.
We'll be talking about various deployment options, getting a virtual private server or VPS,
using Docker machine to provision hosts and connect with them,
creating optimized production images, and of course, deploying the application and its updates.

-------------------code----------------------
• Deployment options
• Getting a Virtual Private Server (VPS)
• Using Docker Machine
• Creating optimized production images
• Deploying the application
-------------------code----------------------

*** 2- Deployment Options ***

-------------------code----------------------
CLUSTER SOLUTIONS
• Docker Swarm
• Kubernetes
-------------------code----------------------

- To deploy our Docker S applications, we have two options.
We can deploy our application to a single host or a cluster, which means
a group of servers. As we might guess, deploying to a single host is really
easy, but the problem with a single host deployment is that if our server
goes offline, our application will not be accessible. And also, if our
application grows rapidly and we get hundreds of thousands of users,
a single server is not able to handle that load. That's why we use
clusters. So with clusters, we get high availability and scalability.
-------------------code----------------------
DEPLOYMENT OPTIONS
• Single-host deployment
• Cluster deployment
-------------------code----------------------

- Now, to run clusters, we need special tools called orchestration tools.
Docker has its own orchestration tool built into it called Docker Swarm,
but as far as we know, it's not really that popular. we've done some research.
Most people these days use another tool called Kubernetes, which is
a Google product. Initially, we thought that would be a waste
of time and that would delay the production of this course. So we decided to drop
Docker Swarm. 

- Now, why didn't we include Kubernetes in this course? Because
Kubernetes is fairly complex and really requires its own course or book. And quite
frankly, it's not something that we know a lot about. So in this section, our focus
will be on a single host deployment, which works for a lot of people. Don't assume
that we need a cluster right from the get-go. we can always start simple and if
needed, we can transition to a cluster.

*** 3- Getting a Virtual Private Server ***

So to deploy our application,
we need a virtual private server or a VPS. Now there are a ton of options
to get a VPS. We have DigitalOcean, Google Cloud Platform,
Microsoft Azure, Amazon Web Services, and of course many many more.
-------------------code----------------------
VPS OPTIONS
• Digital Ocean
• Google Cloud Platform (GCP)
• Microsoft Azure
• Amazon Web Services (AWS)
-------------------code----------------------

- Now out of these, DigitalOcean is the simplest and most beginner friendly one, and
as we go down this list, we get more features, but at the cost of complexity.
So we decided to choose DigitalOcean because we didn't want us to get distracted
from Docker and go somewhere else. Now, all these platforms require
we to provide a credit or a debit card to get a VPS.

- So to execute all the steps we're going to show we in this section, we will need a debit or a credit card
unless we already have access to a VPS.

*** 4- Installing Docker Machine ***

- Once we have a server, we need to use a tool called Docker Machine to talk to the Docker engine on that server.
So this way we can execute Docker commands in our terminal and our commands will be sent to the Docker engine
on our server. 

- So, head over to github.com
slash docker slash machine slash releases. On this page
you can find the latest release. At the time it's version 0.16.2. Now down below you can find
the installation instructions for various platforms.
-------------------code----------------------
github.com/docker/machine/releases
-------------------code----------------------

- It's super easy,
we just have to copy this command and execute it in the terminal.
So copy, base it here, done.
-------------------code----------------------
$ curl -L https://github.com/docker/machine/releases/download/v0.16.2/docker-machine-`uname -s`-`uname -m` >/usr/local/bin/docker-machine && \
  chmod +x /usr/local/bin/docker-machine
-------------------code----------------------

- Alright, Docker Machine is installed.
Let's verify it.
-------------------code----------------------
$ docker-machine --version
docker-machine version 0.16.2, build bd45ab13
-------------------code----------------------
